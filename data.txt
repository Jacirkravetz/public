public static bool ContainsSqlInjectionParallel(string filePath)
{
    long fileSize = new FileInfo(filePath).Length;

    if (fileSize < 100 * 1024 * 1024) // Arquivo menor que 100MB
    {
        return ProcessSmallFile(filePath);
    }
    else if (fileSize < 1L * 1024 * 1024 * 1024) // Arquivo entre 100MB e 1GB
    {
        return ProcessMediumFile(filePath);
    }
    else // Arquivo maior que 1GB
    {
        return ProcessLargeFile(filePath);
    }
}

// ðŸ”¹ Para arquivos pequenos (< 100MB)
private static bool ProcessSmallFile(string filePath)
{
    string[] lines = File.ReadAllLines(filePath, Encoding.UTF8);
    return lines.AsParallel()
                .WithDegreeOfParallelism(Environment.ProcessorCount)
                .Any(line => SqlInjectionPattern.IsMatch(line));
}

// ðŸ”¹ Para arquivos mÃ©dios (100MB â€“ 1GB)
private static bool ProcessMediumFile(string filePath)
{
    const int bufferSize = 8192; // 8KB buffer
    using var fileStream = new FileStream(filePath, FileMode.Open, FileAccess.Read, FileShare.Read, bufferSize, FileOptions.SequentialScan);
    using var reader = new StreamReader(fileStream, Encoding.UTF8, true, bufferSize);
    
    var lines = new ConcurrentBag<string>();
    string? line;
    
    while ((line = reader.ReadLine()) != null)
    {
        lines.Add(line);
    }

    return lines.AsParallel()
                .WithDegreeOfParallelism(Environment.ProcessorCount)
                .Any(line => SqlInjectionPattern.IsMatch(line));
}

// ðŸ”¹ Para arquivos grandes (> 1GB)
private static bool ProcessLargeFile(string filePath)
{
    using var mmf = MemoryMappedFile.CreateFromFile(filePath, FileMode.Open, null, 0, MemoryMappedFileAccess.Read);
    using var stream = mmf.CreateViewStream();
    using var reader = new StreamReader(stream, Encoding.UTF8);
    
    string? line;
    while ((line = reader.ReadLine()) != null)
    {
        if (SqlInjectionPattern.IsMatch(line))
        {
            return true; // Encontrou SQL Injection
        }
    }
    
    return false; // NÃ£o encontrou SQL Injection
}
