public static class TemplateHelper
{
    /// <summary>
    /// Substitui placeholders no template usando os dados fornecidos e parâmetros fixos.
    /// </summary>
    public static string ReplaceTemplate(
        string template,
        Dictionary<string, object> data,
        Dictionary<string, string> fixedParameters = null)
    {
        if (string.IsNullOrWhiteSpace(template))
            return template;

        // Combina os dados e os parâmetros fixos em um dicionário unificado
        var allParameters = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase);

        if (fixedParameters != null)
        {
            foreach (var kvp in fixedParameters)
                allParameters[kvp.Key] = kvp.Value;
        }

        if (data != null)
        {
            foreach (var kvp in data)
            {
                if (kvp.Value != null)
                    allParameters[kvp.Key] = kvp.Value.ToString();
            }
        }

        // Substitui os placeholders {Campo} e @Campo
        foreach (var kvp in allParameters)
        {
            string placeholderCurly = $"{{{kvp.Key}}}";
            string placeholderAt = $"@{kvp.Key}";

            template = template.Replace(placeholderCurly, kvp.Value);
            template = template.Replace(placeholderAt, kvp.Value);
        }

        return template;
    }
}
