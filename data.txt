using QuickFix;
using QuickFix.Transport;
using System;
using System.IO;
using System.Text;
using System.Threading.Tasks;

class Program
{
    static async Task Main(string[] args)
    {
        string fixConfig = @"
[DEFAULT]
ConnectionType=initiator
ReconnectInterval=5
SenderCompID=CLIENT
TargetCompID=SERVER
BeginString=FIX.4.2
SocketConnectHost=127.0.0.1
SocketConnectPort=5001
StartTime=00:00:00
EndTime=23:59:59
HeartBtInt=30
FileLogPath=log
UseDataDictionary=Y

[SESSION]
SessionQualifier=DEFAULT
";

        // ⚠️ Coloque aqui o conteúdo base64 real do seu FIX42.xml ou outro dicionário
        string base64Dictionary = "<SEU_DATA_DICTIONARY_EM_BASE64_AQUI>";

        try
        {
            // 1. Carregar configurações da sessão a partir da string
            using var reader = new StringReader(fixConfig);
            var settings = new SessionSettings(reader);

            // 2. Decodificar base64 e carregar o DataDictionary
            string xml = Encoding.UTF8.GetString(Convert.FromBase64String(base64Dictionary));
            using var xmlStream = new MemoryStream(Encoding.UTF8.GetBytes(xml));
            var dictionary = new DataDictionary.DataDictionary(xmlStream);

            // 3. Criar application, factory e iniciar a sessão
            var app = new MyFixApplication();
            var storeFactory = new FileStoreFactory(settings);
            var logFactory = new FileLogFactory(settings);
            var initiator = new SocketInitiator(app, storeFactory, settings, logFactory);

            // 4. Associar manualmente o DataDictionary à sessão (em memória)
            foreach (SessionID sessionId in settings.GetSessionIDs())
            {
                Session session = Session.LookupSession(sessionId);
                if (session == null)
                    throw new Exception($"Sessão não encontrada: {sessionId}");

                session.SetDataDictionary(dictionary);
            }

            // 5. Iniciar FIX
            initiator.Start();
            Console.WriteLine("FIX iniciado. Pressione ENTER para encerrar...");
            await Task.Run(() => Console.ReadLine());

            initiator.Stop();
            Console.WriteLine("FIX encerrado.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro: {ex.Message}");
        }
    }
}
