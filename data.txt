private async void BtnProcessSelected_Click(object sender, EventArgs e)
{
    if (dataGrid.SelectedRows.Count == 0)
    {
        MessageBox.Show("Please select at least one row to process.", "No Selection", MessageBoxButtons.OK, MessageBoxIcon.Warning);
        return;
    }

    foreach (DataGridViewRow row in dataGrid.SelectedRows)
    {
        if (row.Cells["Id"]?.Value == null)
            continue;

        string id = row.Cells["Id"].Value.ToString();
        string requestUrl = $"{_apiUrl}/{id}"; // GET with concatenated ID

        try
        {
            using var httpClient = new HttpClient();
            var response = await httpClient.GetAsync(requestUrl);

            if (!response.IsSuccessStatusCode)
            {
                MessageBox.Show($"Failed to process ID {id}. Status: {response.StatusCode}");
                continue;
            }

            var jsonString = await response.Content.ReadAsStringAsync();

            // Parse JSON dynamically
            var jsonNode = JsonNode.Parse(jsonString);

            // Optional: Convert to dictionary if needed
            var flatData = new Dictionary<string, object>();
            if (jsonNode is JsonObject obj)
            {
                foreach (var kvp in obj)
                {
                    flatData[kvp.Key] = kvp.Value?.ToString();
                }
            }

            // Save to database (example placeholder)
            SaveApiResultToDatabase(id, jsonString);

            // Optionally display in a message box for debugging
            MessageBox.Show($"Processed ID {id}:\n{jsonString}", "API Response");

        }
        catch (Exception ex)
        {
            MessageBox.Show($"Error processing ID {id}: {ex.Message}");
        }
    }
}

// Example of saving the raw JSON string to the database
private void SaveApiResultToDatabase(string id, string rawJson)
{
    // Example: insert into table
    // You could store rawJson in a NVARCHAR(MAX) column
    // or deserialize it into a dynamic set of columns.
    Console.WriteLine($"Saving to DB - ID: {id}, JSON: {rawJson}");
}
