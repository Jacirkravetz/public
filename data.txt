using System;
using System.Linq;
using System.Threading.Tasks;
using System.Collections.Generic;
using Confluent.Kafka;
using Confluent.Kafka.Admin;

class Program
{
    static async Task Main()
    {
        string bootstrapServers = "localhost:9092";
        string topic = "meu-topico";

        await GetConsumerGroupsForTopic(bootstrapServers, topic);
    }

    static async Task GetConsumerGroupsForTopic(string bootstrapServers, string topic)
    {
        var config = new AdminClientConfig { BootstrapServers = bootstrapServers };

        using (var adminClient = new AdminClientBuilder(config).Build())
        {
            try
            {
                var groups = await adminClient.ListConsumerGroupsAsync();
                var metadata = adminClient.DescribeConsumerGroups(groups.Valid.Select(g => g.GroupId));

                Console.WriteLine($"Consumer Groups que estão lendo do tópico '{topic}':");

                foreach (var group in metadata)
                {
                    if (group.Members.Any(m => m.Assignments.Any(a => a.Topic == topic)))
                    {
                        Console.WriteLine($"- {group.GroupId}");
                    }
                }
            }
            catch (KafkaException ex)
            {
                Console.WriteLine($"Erro ao buscar consumer groups: {ex.Error.Reason}");
            }
        }
    }
}
