DECLARE @IdStep INT;
DECLARE @NomeTabela NVARCHAR(100);
DECLARE @Sql NVARCHAR(MAX);
DECLARE @Mensagem NVARCHAR(MAX);

-- Cursor para iterar sobre todos os Steps parametrizados
DECLARE steps_cursor CURSOR FOR
SELECT IdStep, NomeTabela
FROM ParametrizacaoSteps;

-- Abrir cursor
OPEN steps_cursor;

FETCH NEXT FROM steps_cursor INTO @IdStep, @NomeTabela;

WHILE @@FETCH_STATUS = 0
BEGIN
    BEGIN TRY
        -- Verifica se a tabela realmente existe
        IF EXISTS (
            SELECT 1
            FROM INFORMATION_SCHEMA.TABLES
            WHERE TABLE_NAME = @NomeTabela
                  AND TABLE_TYPE = 'BASE TABLE'
        )
        BEGIN
            SET @Mensagem = '✅ [IdStep: ' + CAST(@IdStep AS NVARCHAR) + '] Tabela encontrada: ' + QUOTENAME(@NomeTabela);
            PRINT @Mensagem;

            -- Monta a query dinâmica
            SET @Sql = 'SELECT * FROM ' + QUOTENAME(@NomeTabela) + 
                       ' -- IdStep: ' + CAST(@IdStep AS NVARCHAR);

            -- Executa a consulta
            EXEC sp_executesql @Sql;
        END
        ELSE
        BEGIN
            SET @Mensagem = '⚠️ [IdStep: ' + CAST(@IdStep AS NVARCHAR) + '] Tabela NÃO encontrada: ' + ISNULL(@NomeTabela, 'NULL');
            PRINT @Mensagem;
        END
    END TRY
    BEGIN CATCH
        SET @Mensagem = '❌ [IdStep: ' + CAST(@IdStep AS NVARCHAR) + '] Erro ao consultar tabela: ' + ISNULL(@NomeTabela, 'NULL') +
                        CHAR(13) + 'Erro: ' + ERROR_MESSAGE();
        PRINT @Mensagem;
    END CATCH;

    -- Próxima linha
    FETCH NEXT FROM steps_cursor INTO @IdStep, @NomeTabela;
END

-- Finaliza cursor
CLOSE steps_cursor;
DEALLOCATE steps_cursor;
