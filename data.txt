using System;
using System.IO;
using System.IO.Compression;
using System.Formats.Tar;

class Program
{
    static void Main(string[] args)
    {
        // Diret√≥rio de origem (logs)
        string sourceDirectory = @"C:\Logs"; 
        // Diret√≥rio de destino
        string outputDirectory = Path.Combine(sourceDirectory, "output");

        // Cria diret√≥rio de sa√≠da se n√£o existir
        Directory.CreateDirectory(outputDirectory);

        Console.WriteLine("üîç Lendo diret√≥rio: " + sourceDirectory);

        // Lista todos arquivos .log e .tar.gz
        var files = Directory.GetFiles(sourceDirectory, "*.*", SearchOption.TopDirectoryOnly);

        foreach (var filePath in files)
        {
            string extension = Path.GetExtension(filePath).ToLower();
            string fileName = Path.GetFileName(filePath);

            try
            {
                if (extension == ".log")
                {
                    // Copia o arquivo .log
                    string destPath = Path.Combine(outputDirectory, fileName);
                    File.Copy(filePath, destPath, overwrite: true);
                    Console.WriteLine($"üìÑ Copiado LOG: {fileName}");
                }
                else if (extension == ".gz" && fileName.EndsWith(".tar.gz", StringComparison.OrdinalIgnoreCase))
                {
                    // Extrair arquivo .tar.gz para uma pasta tempor√°ria
                    string tempTarPath = Path.Combine(outputDirectory, Path.GetFileNameWithoutExtension(fileName));
                    Directory.CreateDirectory(tempTarPath);

                    // Descomprimir .gz para um .tar tempor√°rio
                    string tempTarFile = Path.Combine(tempTarPath, Path.GetFileNameWithoutExtension(fileName) + ".tar");

                    using (FileStream originalFileStream = File.OpenRead(filePath))
                    using (FileStream decompressedFileStream = File.Create(tempTarFile))
                    using (GZipStream decompressionStream = new GZipStream(originalFileStream, CompressionMode.Decompress))
                    {
                        decompressionStream.CopyTo(decompressedFileStream);
                    }

                    // Extrair o .tar
                    TarFile.ExtractToDirectory(tempTarFile, tempTarPath, overwriteFiles: true);

                    // Remove o .tar tempor√°rio
                    File.Delete(tempTarFile);

                    Console.WriteLine($"üì¶ Extra√≠do TAR.GZ: {fileName} ‚Üí {tempTarPath}");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ùå Erro ao processar {fileName}: {ex.Message}");
            }
        }

        Console.WriteLine("\n‚úÖ Processamento conclu√≠do!");
    }
}
