using Microsoft.AspNetCore.Authentication;
using Microsoft.AspNetCore.Http;
using Microsoft.Identity.Web;
using System.Threading.Tasks;

namespace BlazorAuthPKCE.Services
{
    public class TokenService
    {
        private readonly IHttpContextAccessor _httpContextAccessor;
        private readonly ITokenAcquisition _tokenAcquisition;

        public TokenService(IHttpContextAccessor httpContextAccessor, ITokenAcquisition tokenAcquisition)
        {
            _httpContextAccessor = httpContextAccessor;
            _tokenAcquisition = tokenAcquisition;
        }

        public async Task<string?> GetAccessTokenAsync()
        {
            var httpContext = _httpContextAccessor.HttpContext;

            if (httpContext == null)
                return null;

            // ðŸ“Œ Primeiro tenta obter o token direto do contexto do usuÃ¡rio autenticado
            string? token = await httpContext.GetTokenAsync("access_token");

            if (!string.IsNullOrEmpty(token))
                return token;

            try
            {
                // ðŸ“Œ Se nÃ£o conseguir, tenta obter diretamente do Microsoft Identity
                var scopes = new[] { "https://graph.microsoft.com/.default" };
                token = await _tokenAcquisition.GetAccessTokenForUserAsync(scopes);
                return token;
            }
            catch
            {
                return null;
            }
        }
    }
}
