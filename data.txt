private async Task HandleFileSelection(InputFileChangeEventArgs e)
{
    var file = e.File; // Captura o arquivo corretamente
    if (file != null)
    {
        using var stream = file.OpenReadStream(); // Abre o stream
        var epics = EpicService.ReadExcel(stream); // Passa o stream diretamente

        foreach (var epic in epics)
        {
            await EpicService.CreateEpicInGitLab(epic);
        }

        statusMessage = "Epics importados com sucesso!";
        StateHasChanged(); // Atualiza a UI
    }
}
public class EpicService
{
    private readonly IConfiguration _config;

    public EpicService(IConfiguration config)
    {
        _config = config;
    }

    public List<Epic> ReadExcel(Stream fileStream)
    {
        var epics = new List<Epic>();
        System.Text.Encoding.RegisterProvider(System.Text.CodePagesEncodingProvider.Instance);

        using var reader = ExcelReaderFactory.CreateReader(fileStream);
        var result = reader.AsDataSet();
        var table = result.Tables[0];

        for (int i = 1; i < table.Rows.Count; i++)
        {
            var row = table.Rows[i];
            epics.Add(new Epic
            {
                Title = row[0].ToString(),
                Description = row[1].ToString(),
                StartDate = DateTime.Parse(row[2].ToString()),
                EndDate = DateTime.Parse(row[3].ToString()),
                Labels = row[4].ToString()
            });
        }
        return epics;
    }
}
