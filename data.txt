using System;
using System.IO;
using System.Text;
using System.Threading.Tasks;
using System.Xml;
using System.Xml.Linq;

public static class XmlUtils
{
    /// <summary>
    /// Reads a Stream, parses it as XML, and returns its string representation.
    /// </summary>
    /// <param name="stream">Input stream containing XML content.</param>
    /// <returns>Formatted XML string.</returns>
    public static async Task<string> ReadXmlStreamAsStringAsync(Stream stream)
    {
        if (stream == null || !stream.CanRead)
            throw new ArgumentException("Invalid or unreadable stream.");

        // Reset stream position if possible
        if (stream.CanSeek)
            stream.Seek(0, SeekOrigin.Begin);

        using var reader = new StreamReader(stream, Encoding.UTF8, leaveOpen: true);
        var rawContent = await reader.ReadToEndAsync();

        if (string.IsNullOrWhiteSpace(rawContent))
            throw new ArgumentException("The stream does not contain any content.");

        try
        {
            // Validate and format as XML
            var xml = XDocument.Parse(rawContent);
            return xml.ToString(SaveOptions.None);
        }
        catch (XmlException ex)
        {
            throw new InvalidDataException("The stream does not contain valid XML.", ex);
        }
    }
}
