@page "/feed-generation"
@inject IGeraService GeraService

<h3>📜 Geração de Feeds</h3>

<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="col-md-4">
                <label>📅 Business Date:</label>
                <InputDate @bind-Value="inputParameters.BusinessDate" class="form-control" />
            </div>
            <div class="col-md-2">
                <label>🔢 Version:</label>
                <InputNumber @bind-Value="inputParameters.Version" class="form-control" />
            </div>
            <div class="col-md-2">
                <label>⚡ AdHoc:</label>
                <InputSelect @bind-Value="inputParameters.AdHoc" class="form-control">
                    <option value="S">Sim</option>
                    <option value="N">Não</option>
                </InputSelect>
            </div>
            <div class="col-md-4">
                <label>📦 Feed:</label>
                <InputSelect @bind-Value="inputParameters.Feed" class="form-control">
                    @foreach (var feed in availableFeeds)
                    {
                        <option value="@feed">@feed</option>
                    }
                </InputSelect>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-6">
                <label>🆔 Archive ID:</label>
                <InputText @bind-Value="inputParameters.ArchiveID" class="form-control" />
            </div>
            <div class="col-md-3">
                <label>⏳ Initial Date:</label>
                <InputDate @bind-Value="inputParameters.InitialDate" class="form-control" />
            </div>
            <div class="col-md-3">
                <label>⏳ End Date:</label>
                <InputDate @bind-Value="inputParameters.EndDate" class="form-control" />
            </div>
        </div>

        <div class="mt-4">
            <button class="btn btn-primary" @onclick="GenerateFeed">🚀 Generate Feeds</button>
        </div>

        <h5 class="mt-4">📜 Log do Processo</h5>
        <div class="log-container">
            <div class="log-box" id="logBox">
                @foreach (var log in logs)
                {
                    <div class="@GetLogClass(log.Level)">@log.Message</div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private InputParameters inputParameters = new();
    private List<string> availableFeeds = new() { "Feed A", "Feed B", "Feed C" };
    private List<LogEntry> logs = new();

    private async Task GenerateFeed()
    {
        logs.Clear();
        await GeraService.InitGenerateFiles(inputParameters, AddLog);
    }

    private void AddLog(LogEntry logEntry)
    {
        logs.Add(logEntry);
        StateHasChanged();
        ScrollToBottom();
    }

    private string GetLogClass(LogLevel level) => level switch
    {
        LogLevel.Information => "log-info",
        LogLevel.Warning => "log-warning",
        LogLevel.Error => "log-error",
        _ => "log-info"
    };

    private async Task ScrollToBottom()
    {
        await JS.InvokeVoidAsync("scrollToBottom", "logBox");
    }
}


.log-container {
    height: 300px;
    overflow-y: auto;
    background-color: #1e1e1e;
    border-radius: 8px;
    padding: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    margin-top: 10px;
}

.log-box {
    height: 100%;
    overflow-y: auto;
    font-family: monospace;
    white-space: pre-wrap;
}

.log-info {
    color: #17a2b8;
}

.log-warning {
    color: #ffc107;
    font-weight: bold;
}

.log-error {
    color: #dc3545;
    font-weight: bold;
}


wwwroot/js/site.js

js
Copiar
Editar
window.scrollToBottom = (elementId) => {
    var element = document.getElementById(elementId);
    if (element) {
        element.scrollTop = element.scrollHeight;
    }
};

E no arquivo _Host.cshtml, adicione a referência ao script:

html
Copiar
Editar
<script src="js/site.js"></script>
